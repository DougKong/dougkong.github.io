webpackJsonp([0x5ca28275923d],{477:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Gatsby Starter Blog",author:"Kyle Mathews"}},markdownRemark:{id:"/Users/burger/Desktop/githubio/src/pages/git-back/index.md absPath of file >>> MarkdownRemark",html:"<h2>Problem</h2>\n<blockquote>\n<p>I incorrectly merged the code I pulled from the upstream group project repository.  I commited the merge to my local repo and pushed it to my fork of the project on my github.</p>\n</blockquote>\n<h2>Goals</h2>\n<ol>\n<li>Reset my local repo back to the commit I want</li>\n<li>Redo the merge</li>\n<li>Push new merge commit up my fork of the project on github so I can later make a pull request on the group project repo</li>\n</ol>\n<h2>Solution</h2>\n<ol>\n<li>git log “find the &#x3C;sha> of the commit I want”</li>\n<li>git reset —hard &#x3C;sha> “change my local repo to the version of the commit i want”</li>\n<li>git push “trigger merge.  do the merge correctly”</li>\n<li>git add <name of file> “adds merged file to commit”</li>\n<li>git commit “commits code to local repo”</li>\n<li>git push —force origin master “forces my local commits to override what is commited in my github fork of the project”</li>\n</ol>\n<blockquote>\n<p>After all those steps, I checked my github fork of the project to see that my fixed merge was there and that I could make a pull request on the group project repo without a merge conflict.</p>\n</blockquote>",frontmatter:{title:"Git Back to the Future",date:"May 01, 2015"}}},pathContext:{slug:"/git-back/",previous:!1,next:!1}}}});
//# sourceMappingURL=path---git-back-e0ff84f6fa153067c939.js.map